import Head from 'next/head'
import Image from 'next/image'
import { useState, useEffect } from 'react'
import styles from '../styles/Home.module.css'


/* 1番目 */
// next.jsは複数ページを制作できる
// bodyの中身から記入するので<header>内部は<Head>内に記入しよう！

// export default function Home() {
//   let title = 'Next.js page'
//   let message = 'React Next.js sample page.'

//   return (
//     <div>
//       <Head>
//         <title>{ title }</title>
//         <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossOrigin="anonymous" />
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <h1 className="bg-primary text-white display-4">React</h1>
//       <div className="container">
//         <h4 className="my-3">{ title }</h4>
//         <div className="alert alert-primary text-center">
//           <p className="h5">{ message }.</p>
//         </div>
//       </div>
//     </div>
//   )
// }


/* 2番目 */
// スタイルの設定を変数にまとめて、Next.jsに適用させる

// export default function Home() {

//   let title = 'Next.js page'
//   let message = 'React Next.js sample page'

//   const h1 = {
//     textAlign: 'right',
//     padding: '5px 15px'
//   }

//   const p = {
//     textAlign: 'left',
//     margin: '0px 5px',
//     color: '#666',
//     fontSize: '18px'
//   }

//   const subtitle = {
//     textAlign: 'center',
//     margin: '0, 5px',
//     color: '#99d',
//     fontSize: '24px',
//     fontWeight: 'bold'
//   }

//   return (
//     <div>
//       <Head>
//         <title>{ title }</title>
//         <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous" />
//       </Head>

//       <h1 className="bg-primary text-white display-4" style={ h1 }>
//         React
//       </h1>
//       <div className="container">
//         <p className="my-3" style={ subtitle } id="subtitle">{ title }</p>
//         <div className="alert alert-primary text-center">
//           <p className="h5" style={ p }>{ message }.</p>
//         </div>
//       </div>
//     </div>
//   )
// }


/* 3番目 */
// <style jsx>{` スタイルを記述 `}</style>を使って
// 本文内に<style></style>タグを適用する

// export default function Home() {
//   let title = 'Next.js page'
//   let message = 'React Next.js sample page.'

//   return (
//     <div>
//       <Head>
//         <title>{ title }</title>
//         <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous"></link>
//       </Head>
//       <style jsx>{`
//         h1 {
//           text-align: center;
//         }

//         h2 {
//           text-align: center;
//           margin: 0 5px;
//           color: #aad;
//           font-size: 36px;
//           font-weight: bold;
//         }

//         p {
//           text-align: left;
//           margin: 0 5px;
//           color: blue;
//           font-size: 18px;
//         }
//       `}</style>

//       <h1 className="bg-primary text-white display-4">
//         React
//       </h1>
//       <div className="container">
//         <h2 className="my-3 subtitle">{ title }</h2>
//         <div className="alert alert-primary text-center">
//           <p className="h5">{ message }.</p>
//         </div>
//       </div>
//     </div>
//   )
// }


/* 4番目 */
//  <head></head>内をコンポーネント化することで、
// <link>や<title>を何度も書くのを省略する

// import Header from './header'

// export default function Home() {
//   let title = 'Next.js Index'
//   let message = 'React Next.js sample page.'

//   return (
//     <div>
//       <Header title={title} />
//       <h1 className="bg-primary px-3 text-white display-4 text-right">
//         React
//       </h1>
//       <div className="container">
//         <h3 className="my-3 text-primary text-center">
//           { title }
//         </h3>
//         <div className="alert alert-primary text-left">
//           <p className="h5">{ message }.</p>
//         </div>
//       </div>
//     </div>
//   )
// }


/* 5番目 */
// other.jsというファイルを作り、インデックスとリンクさせる

// import Header from './header'
// import Link from 'next/link'

// export default function Home() {
//   const title = 'Index'

//   return (
//     <div>
//       <Header title = { title } />
//       <h1 className="bg-primary px-3 text-white display-4">
//         React
//       </h1>
//       <div className="container">
//         <h3 className="my-3 text-primary text-center">
//           { title }
//         </h3>
//         <div className="card p-3 text-center">
//           <p>
//             これは、ページ移動のサンプルです。
//           </p>
//           <Link href="/Other">
//             <a>Go to other page &gt;&gt;</a>
//           </Link>
//         </div>
//       </div>
//     </div>
//   )
// }


/* 6番目 */
// componentsでヘッダーとフッターとレイアウトファイルを作成して、
// 一つのページを作る

// import Layout from '../components/layout'
// import Link from 'next/link'

// export default function Home() {
//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">Welcome to next.js!</h5>
//           <Link href="./Other">
//             <button className="btn btn-primary">
//               Go to Other &gt;&gt;
//             </button>
//           </Link>
//         </div>

//       </Layout>
//     </div>
//   )
// }


/* 7番目 */
// イメージコンポーネントを作って反映させる

// import Layout from '../components/layout'
// import MyImage from '../components/Image'

// export default function Home() {
//   return (
//     <div>
//       <Layout header="Next.js" title="Top page">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">Welcome to next.js!</h5>
//           <MyImage fname="cat.jpg" size="700" />
//         </div>
//       </Layout>
//     </div>
//   )
// }


/* 8番目 */
// 外部のJSONデータにアクセスしてデータを取得する
// publicのdata.jsonから取得

// import Layout from '../components/layout'

// export default function Home() {
//   const url = './data.json'
//   const [data, setData] = useState({message:'', data:[]})

//   // fetch APlでJSONを呼び出し、そのオブジェクトを.then()で加工

//   useEffect(() => {fetch(url).then(res => res.json()).then(res => setData(res)), []})

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">{ data.message }</h5>
//           <table className="table bg-white">
//             <thead className="table-dark">
//               <tr>
//                 <th>Name</th>
//                 <th>Mail</th>
//                 <th>Age</th>
//               </tr>
//             </thead>
//             <tbody>
//               { data.data.map((value, key) => (
//                 <tr key={ key }>
//                   <th>{ value.name }</th>
//                   <td>{ value.mail }</td>
//                   <td>{ value.age }</td>
//                 </tr>
//               )) }
//             </tbody>
//           </table>
//         </div>
//       </Layout>
//     </div>
//   )
// }


/* 9番目 */
// fetch().then(res => )ではデータを変更時リロードしないと変更されない
// Next.jsではJSONを呼び出す独自フックがあり、SWRをインストールする
// npm install swr

// import Layout from '../components/layout'
// import useSWR from 'swr'

// // fether追加　これを入れないとno dataになる
// const fetcher = url => fetch(url).then(res => res.json())

// export default function Home() {

//   // errorとfetcher追加　これを入れないとno dataになる
//   const { data, error } = useSWR('/data.json', fetcher)

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//       <div className="alert alert-primary text-center">
//         <h5 className="mb-4">
//           {data != undefined ? data.message : 'error...' }
//         </h5>
//         <table className="table table-dark">
//           <thead className="">
//             <tr><th>Name</th><th>Mail</th><th>Age</th></tr>
//           </thead>
//           <tbody>
//             {data != undefined ? data.data.map((value, key)=> (
//               <tr key={key}>
//                 <th>{value.name}</th>
//                 <td>{value.mail}</td>
//                 <td>{value.age}</td>
//               </tr>
//             )) : <tr><th></th><td>no data.</td><td></td></tr>}
//           </tbody>
//         </table>
//       </div>
//       </Layout>
//     </div>
//   )
// }


/* 10番目 */
// JSONが読めるようになったら次はテキスト文!

// import Layout from '../components/layout'
// import useSWR from 'swr'

// export default function Home() {
//   const func = (...args) => fetch(...args).then(res => res.text())
//   const { data, error } = useSWR('/data.txt', func)

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">
//             { data }
//           </h5>
//         </div>
//       </Layout>
//     </div>
//   )
// }


/* 11番目 */
// hello.jsと連携したjsonを利用する
// /api/hello?id=1 などで特定のjson内容を出す

// import Layout from '../components/layout'
// import useSWR from 'swr'

// const fetcher = url => fetch(url).then(res => res.json())

// export default function Home() {
//   const [address, setAddress] = useState('/api/hello')
//   const { data, error } = useSWR(address, fetcher)

//   const onChange = (e) => {
//     setAddress('/api/hello?id=' + e.target.value)
//   }

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">
//             { JSON.stringify(data) }
//           </h5>
//           <input type="number" className="form-control" onChange={ onChange } />
//         </div>

//       </Layout>
//     </div>
//   )
// }


/* 12番目 */
// api/hello/1という表記で特定のjsonを出す
// apiにまずhelloフォルダを作成[id].jsを作る

// import Layout from '../components/layout'
// import useSWR from 'swr'


// const fetcher = url => fetch(url).then(res => res.json())

// export default function Home() {
//   const [address, setAddress] = useState('/api/hello')
//   const { data, error } = useSWR(address, fetcher)

//   const doChange = (e) => {
//     setAddress('/api/hello/' + e.target.value)
//   }

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">
//             { JSON.stringify(data) }
//           </h5>
//           <input type="number" className="form-control" onChange={ doChange } />
//         </div>
//       </Layout>
//     </div>
//   )
// }


/* 13番目 */
// api/hello/1/mailといった複数クエリで情報を出す
// apiに[...params].js

// import Layout from '../components/layout'
// import useSWR from 'swr'


// const fetcher = url => fetch(url).then(res => res.json())

// export default function Home() {
//   const [pref, setPref] = useState({id: 0, item: 'name'})
//   const [address, setAddress] = useState('/api/hello/' + pref.id + '/' + pref.item)
//   const {data, error} = useSWR(address, fetcher)

//   const onChange = (e) => {
//     pref.id = e.target.value
//     setPref(pref)
//     setAddress('api/hello/' + pref.id + '/' + pref.item)
//   }

//   const onSelect = (e) => {
//     pref.item = e.target.value
//     setPref(pref)
//     setAddress('/api/hello/' + pref.id + '/' + pref.item)
//   }

//   return (
//     <div>
//       <Layout header="Next.js" title="Top page.">
//         <div className="alert alert-primary text-center">
//           <h5 className="mb-4">
//             { JSON.stringify(data) }
//           </h5>
//           <input type="number" className="form-control form-control-sm mb-2" onChange={ onChange } />
//           <select onChange={ onSelect } className="form-control form-control-sm">
//             <option value="name">Name</option>
//             <option value="email">Mail</option>
//             <option value="age">Age</option>
//           </select>
//         </div>
//       </Layout>
//     </div>
//   )
// }


